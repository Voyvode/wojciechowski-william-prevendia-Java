services:

  # ======================== FRONTEND ========================

  frontend:
    container_name: prevendia-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=prevendia-frontend
      - SERVER_PORT=8090
    networks:
      - prevendia-network
    ports:
      - "8090:8090"
    depends_on:
      - secured-gateway
    restart: unless-stopped

  # ==================== SECURED GATEWAY ====================

  secured-gateway:
    container_name: prevendia-secured-gateway
    build:
      context: ./secured-gateway
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=prevendia-secured-gateway
      - SERVER_PORT=8080
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - BACKEND_PATIENTS_URL=http://backend-patients:8081
      - BACKEND_NOTES_URL=http://backend-notes:8082
      - BACKEND_RISK_URL=http://backend-risk:8083
    networks:
      - prevendia-network
    ports:
      - "8080:8080"
    depends_on:
      - backend-patients
      - backend-notes
      - backend-risk
    restart: unless-stopped
    
  # ======================== BACKENDS ========================

  backend-patients:
    container_name: prevendia-backend-patients
    build:
      context: ./backend-patients
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=prevendia-backend-patients
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://prevendia-db-patients:5432/patients
      - SPRING_DATASOURCE_USERNAME=prevendia
      - SPRING_DATASOURCE_PASSWORD=${DB_PATIENTS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    networks:
      - prevendia-network
    ports:
      - "8081:8081"
    depends_on:
      db-patients:
        condition: service_healthy
    restart: unless-stopped
    
  backend-notes:
    container_name: prevendia-backend-notes
    build:
      context: ./backend-notes
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=prevendia-backend-notes
      - SERVER_PORT=8082
      - SPRING_DATA_MONGODB_URI=mongodb://prevendia:${DB_NOTES_PASSWORD}@db-notes:27017
      - SPRING_DATA_MONGODB_DATABASE=notes
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    networks:
      - prevendia-network
    ports:
      - "8082:8082"
    depends_on:
      db-notes:
        condition: service_healthy
    restart: unless-stopped
    
  backend-risk:
    container_name: prevendia-backend-risk
    build:
      context: ./backend-risk
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=prevendia-backend-risk
      - SERVER_PORT=8083
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    networks:
      - prevendia-network
    ports:
      - "8083:8083"
    restart: unless-stopped

  # ======================= DATABASES ========================

  db-patients:
    image: postgres:latest
    container_name: prevendia-db-patients
    environment:
      POSTGRES_USER: prevendia
      POSTGRES_PASSWORD: ${DB_PATIENTS_PASSWORD}
      POSTGRES_DB: patients
    volumes:
      - ./backend-patients/init-db/:/docker-entrypoint-initdb.d
      - patients-data:/var/lib/postgresql/data
    networks:
      - prevendia-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "prevendia", "-d", "patients"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    
  db-notes:
    image: mongo:latest
    container_name: prevendia-db-notes
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: prevendia
      MONGO_INITDB_ROOT_PASSWORD: ${DB_NOTES_PASSWORD}
      MONGO_INITDB_DATABASE: notes
    volumes:
      - ./backend-notes/init-db/:/docker-entrypoint-initdb.d/
      - notes-data:/data/db
    networks:
      - prevendia-network
    ports:
      - "27017:27017"
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  patients-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/postgres
      o: bind
  notes-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/mongo
      o: bind

networks:
  prevendia-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16